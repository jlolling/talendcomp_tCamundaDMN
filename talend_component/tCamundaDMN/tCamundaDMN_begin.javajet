<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser 
		org.talend.core.model.metadata.IMetadataTable 
		org.talend.core.model.metadata.IMetadataColumn 
		org.talend.core.model.process.IConnection
		org.talend.core.model.process.IConnectionCategory
		org.talend.core.model.utils.NodeUtil
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.metadata.types.JavaTypesManager
		java.util.List 
		java.util.ArrayList 
    	java.util.Map		
	" 
%>
<% 
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode) codeGenArgument.getArgument();
	String cid = node.getUniqueName();
	IConnection conn = null;
	List<? extends IConnection> outConns = NodeUtil.getOutgoingConnections(node, IConnectionCategory.DATA);
	if (outConns.size() > 0) {
		conn = outConns.get(0);
	}
	List<IMetadataColumn> listColumns = new ArrayList<IMetadataColumn>(); // dummy
	List<IMetadataTable> metadatas = node.getMetadataList();
	if (metadatas != null && metadatas.size() > 0) {
    	IMetadataTable metadata = metadatas.get(0);
    	if (metadata != null) {
    		listColumns = metadata.getListColumns();
		}
	}
	List<IMetadataColumn> listIncomingColumns = new ArrayList<IMetadataColumn>();
	IConnection inconn = null;
	List<? extends IConnection> inConns = NodeUtil.getIncomingConnections(node, IConnectionCategory.DATA);
	if (inConns.size() > 0) {
		inconn = inConns.get(0);
		IMetadataTable metadata = node.getMetadataFromConnector(inconn.getConnectorName());
		listIncomingColumns = metadata.getListColumns();
	}
   String dmnSource = ElementParameterParser.getValue(node, "__DMN_SOURCE__");
   String resourceName = ElementParameterParser.getValue(node, "__RESOURCE_NAME__");
   String filePath = ElementParameterParser.getValue(node, "__FILE_PATH__");
   String decisionKey = ElementParameterParser.getValue(node, "__DECISION_KEY__");
   boolean oneRecordIfNoResult = "true".equals(ElementParameterParser.getValue(node, "__PROVIDE_EMPTY_OUTPUT_IF_DECISION_HAS_NO_RESULT__"));
   boolean cacheResults = "true".equals(ElementParameterParser.getValue(node, "__CACHE_RESULTS__"));
	@SuppressWarnings("unchecked")
	List<Map<String, String>> configList = (List<Map<String,String>>) ElementParameterParser.getObjectValue(node, "__COLUMN_CONFIG__");
%>
	int nb_line_<%=cid%> = 0;
	de.jlo.talendcomp.camunda.dmn.DmnRunner <%=cid%> = new de.jlo.talendcomp.camunda.dmn.DmnRunner();
	String decisionKey_<%=cid%> = <%=decisionKey%>;
<% if ("RESOURCE".equals(dmnSource)) { %>
	<%=cid%>.loadDmnFromResource(decisionKey_<%=cid%>, <%=resourceName%>);		
<% } else if ("FILE".equals(dmnSource)) { %>
	<%=cid%>.loadDmnFromFile(decisionKey_<%=cid%>, <%=filePath%>);
<% } %>
	// check io variables		
<%	for (int i = 0; i < listColumns.size(); i++) {
		IMetadataColumn mc = listColumns.get(i);
		Map<String, String> config = configList.get(i);
		String name = mc.getLabel();
		boolean useAsOutput = "true".equals(config.get("USE_AS_OUTPUT"));
		if (useAsOutput) { %>
	<%=cid%>.addExpectedOutputVariable("<%=name%>");
<%		} else { %>
	<%=cid%>.addAvailableInputVariable("<%=name%>");
<%		} %>
<%	} %>
	try {
		// commented out because it fails in case of multiple decisions in one DRG <%=cid%>.validateInputVariables();
		<%=cid%>.validateOutputVariables();
	} catch (Exception e) {
		String message = e.getMessage();
		globalMap.put("<%=cid%>_ERROR_MESSAGE", message);
		throw e;
	}
	<%=cid%>.setCacheResults(<%=cacheResults%>);
	<%=cid%>.setProvideOneRecordIfNoDecsionResult(<%=oneRecordIfNoResult%>);