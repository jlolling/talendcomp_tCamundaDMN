<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser 
		org.talend.core.model.metadata.IMetadataTable 
		org.talend.core.model.metadata.IMetadataColumn 
		org.talend.core.model.process.IConnection
		org.talend.core.model.process.IConnectionCategory
		org.talend.core.model.utils.NodeUtil
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.metadata.types.JavaTypesManager
		java.util.List 
		java.util.ArrayList 
    	java.util.Map		
	" 
%>
<% 
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode) codeGenArgument.getArgument();
	String cid = node.getUniqueName();
	IConnection outconn = null;
	List<? extends IConnection> outConns = NodeUtil.getOutgoingConnections(node, IConnectionCategory.DATA);
	if (outConns.size() > 0) {
		outconn = outConns.get(0);
	}
	List<IMetadataColumn> listColumns = new ArrayList<IMetadataColumn>(); // dummy
	List<IMetadataTable> metadatas = node.getMetadataList();
	if (metadatas != null && metadatas.size() > 0) {
    	IMetadataTable metadata = metadatas.get(0);
    	if (metadata != null) {
    		listColumns = metadata.getListColumns();
		}
	}
	List<IMetadataColumn> listIncomingColumns = new ArrayList<IMetadataColumn>();
	IConnection inconn = null;
	List<? extends IConnection> inConns = NodeUtil.getIncomingConnections(node, IConnectionCategory.DATA);
	if (inConns.size() > 0) {
		inconn = inConns.get(0);
		IMetadataTable metadata = node.getMetadataFromConnector(inconn.getConnectorName());
		listIncomingColumns = metadata.getListColumns();
	}
   String dmnSource = ElementParameterParser.getValue(node, "__DMN_SOURCE__");
   String resourceName = ElementParameterParser.getValue(node, "__RESOURCE_NAME__");
   String filePath = ElementParameterParser.getValue(node, "__FILE_PATH__");
   String decisionKey = ElementParameterParser.getValue(node, "__DECISION_KEY__");
   boolean oneRecordIfNoResult = "true".equals(ElementParameterParser.getValue(node, "__PROVIDE_EMPTY_OUTPUT_IF_DECISION_HAS_NO_RESULT__"));
	@SuppressWarnings("unchecked")
	List<Map<String, String>> configList = (List<Map<String,String>>) ElementParameterParser.getObjectValue(node, "__COLUMN_CONFIG__");
%>
	// clear variables and results from the previous row
	<%=cid%>.clearVariables();
	// fill input values and transfer input to output
<%	for (int i = 0; i < listColumns.size(); i++) {
		IMetadataColumn mc = listColumns.get(i);
		Map<String, String> config = configList.get(i);
		String name = mc.getLabel();
		boolean useAsOutput = "true".equals(config.get("USE_AS_OUTPUT"));
		if (inconn != null && useAsOutput == false) { %>
	<%=cid%>.addInputValue("<%=name%>", <%=inconn.getName()%>.<%=name%>);
<%		}
		if (inconn != null && outconn != null) {
			for (IMetadataColumn incol : listIncomingColumns) { %>
<%				if (incol.getLabel().equals(mc.getLabel())) {
					if (outconn != null && useAsOutput == false) { %>
	<%=outconn.getName()%>.<%=mc.getLabel()%> = <%=inconn.getName()%>.<%=incol.getLabel()%>;
<%					}
					break;
				}
			}
		}
	} %>
	// evaluate the decision
	try {
		<%=cid%>.evaluate();
	} catch (Exception e) {
		String message = e.getMessage();
		globalMap.put("<%=cid%>_ERROR_MESSAGE", message);
		throw e;
	}
	globalMap.put("<%=cid%>_COUNT_CURRENT_DECISION_RESULT_RECORDS", <%=cid%>.countResultRows());
<%	if (outconn != null) { %>
	while (<%=cid%>.next()) {
		nb_line_<%=cid%>++;
<%		for (int i = 0; i < listColumns.size(); i++) {
			IMetadataColumn mc = listColumns.get(i);
			Map<String, String> config = configList.get(i);
			String name = mc.getLabel();
			boolean useAsOutput = "true".equals(config.get("USE_AS_OUTPUT"));
			if (useAsOutput) {
				String javaClassName = mc.getTalendType().substring(3);
				boolean isDateValue = javaClassName.contains("Date");
				boolean isNullable = mc.isNullable(); %>
		try {
<%				if (isDateValue) { 
					String pattern = mc.getPattern(); 
					if (pattern == null || pattern.trim().isEmpty()) {
						pattern = "null";
					} %>
			<%=outconn.getName()%>.<%=mc.getLabel()%> = <%=cid%>.getOutputValueAsDate("<%=name%>",<%=isNullable%>,<%=pattern%>);
<%				} else { %>
			<%=outconn.getName()%>.<%=mc.getLabel()%> = <%=cid%>.getOutputValueAs<%=javaClassName%>("<%=name%>",<%=isNullable%>);
<%				} %>
		} catch (Exception ve) {
			String message = "Get output value for column: <%=name%> failed: " + ve.getMessage();
			globalMap.put("<%=cid%>_ERROR_MESSAGE", message);
			throw new Exception(message, ve);
		}
<%			}
		}
	} %>
		
		
	